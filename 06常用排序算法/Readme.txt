排序算法大体可分为两种：
1.比较排序，时间复杂度O(nlogn) ~ O(n^2)，
主要有：冒泡排序，选择排序，插入排序，归并排序，堆排序，快速排序等。

2.非比较排序，时间复杂度可以达到O(n)，
主要有：计数排序，基数排序，桶排序等。

这里我们来探讨一下常用的比较排序算法，下表给出了常见比较排序算法的性能：

有一点我们很容易忽略的是排序算法的稳定性(腾讯校招2016笔试题曾考过)。
排序算法稳定性的简单形式化定义为：
如果Ai = Aj，排序前Ai在Aj之前，排序后Ai还在Aj之前，则称这种排序算法是稳定的。
通俗地讲就是保证排序前后两个相等的数的相对顺序不变。

对于不稳定的排序算法，只要举出一个实例，即可说明它的不稳定性；
而对于稳定的排序算法，必须对算法进行分析从而得到稳定的特性。
需要注意的是，排序算法是否为稳定的是由具体算法决定的，
不稳定的算法在某种条件下可以变为稳定的算法，
而稳定的算法在某种条件下也可以变为不稳定的算法。

例如，对于冒泡排序，原本是稳定的排序算法，
如果将记录交换的条件改成A[i] >= A[i + 1]，则两个相等的记录就会交换位置，
从而变成不稳定的排序算法。

其次，说一下排序算法稳定性的好处。
排序算法如果是稳定的，那么从一个键上排序，然后再从另一个键上排序，前一个键排序
的结果可以为后一个键排序所用。基数排序就是这样，先按低位排序，逐次按高位排序，
低位排序后元素的顺序在高位也相同时是不会改变的。

对于基础类型，相同值是无差别的，排序前后相同值的相对位置并不重要，
所以选择更为高效的快速排序，尽管它是不稳定的排序算法；
而对于非基础类型，排序前后相等实例的相对位置不宜改变，所以选择稳定的归并排序。
